[
  {
    "objectID": "main.html",
    "href": "main.html",
    "title": "Статистический анализ временных рядов",
    "section": "",
    "text": "Подключаем необходимые библиотеки:\nlibrary(ggpubr)\nlibrary(lattice)\nlibrary(mFilter)\nlibrary(tidyverse)\nlibrary(parallel)\nlibrary(doFuture)\nlibrary(doRNG)\nlibrary(tseries)\n\nsource(\"./R/eossa_new.R\")"
  },
  {
    "objectID": "main.html#искусственные-данные",
    "href": "main.html#искусственные-данные",
    "title": "Статистический анализ временных рядов",
    "section": "1.1 Искусственные данные",
    "text": "1.1 Искусственные данные\nСлучай, когда частота попадает в решетку периодограммы:\n\nN &lt;- 100\nggtsdisplay(em_harmonic(N, 0.25))\n\n\n\n\n\n\n\n\nКогда частота не попадает, наблюдается эффект растекания частоты:\n\nggtsdisplay(em_harmonic(N, 0.255))\n\n\n\n\n\n\n\n\nБелый шум:\n\nset.seed(1234)\nrnorm(N) |&gt; ggtsdisplay()\n\n\n\n\n\n\n\n\nКрасный шум:\n\nset.seed(1234)\nphi &lt;- 0.7\nrn_start &lt;- rnorm(1, sd = 1 / sqrt(1 - phi^2))\narima.sim(list(ar = phi), N, n.start = 1, start.innov = rn_start) |&gt;\n  ggtsdisplay()\n\n\n\n\n\n\n\n\nПри увеличении длины ряда значение периодограммы в частоте, соответствующей гармонике, увеличивается, а в частотах, соответствующих шуму, остаются теми же.\n\nset.seed(1234)\nN &lt;- 200\ncos4 &lt;- em_harmonic(N, 0.25)\nwn &lt;- rnorm(N)\n\nper1 &lt;- ggperiodogram(head(wn + cos4, 100))\nper2 &lt;- ggperiodogram(wn + cos4)\n\nggarrange(per1 + ylim(0, max(per2$data$spectrum)), per2, nrow = 2)\n\n\n\n\n\n\n\n\n\nset.seed(1234)\nrn_start &lt;- rnorm(1, sd = 1 / sqrt(1 - phi^2))\nrn &lt;- arima.sim(list(ar = phi), N, n.start = 1, start.innov = rn_start)\n\nper1 &lt;- ggperiodogram(head(rn + cos4, 100))\nper2 &lt;- ggperiodogram(rn + cos4)\n\nggarrange(per1 + ylim(0, max(per2$data$spectrum)), per2, nrow = 2)"
  },
  {
    "objectID": "main.html#реальные-данные",
    "href": "main.html#реальные-данные",
    "title": "Статистический анализ временных рядов",
    "section": "1.2 Реальные данные",
    "text": "1.2 Реальные данные\n\n1.2.1 Яркость определенной звезды в полночь\n\ndata(\"star\", package = \"astsa\")\nggtsdisplay(star)\n\n\n\n\n\n\n\n\n\nper &lt;- ggperiodogram(star)\nper$data$frequency[order(per$data$spectrum, decreasing = TRUE)[1:2]]\n\n## [1] 0.03500000 0.04166667\n\n\nНа периодограмме есть два заметных пика. Эти пики приходятся на частоты \\(\\omega_1=21/600 = 0.035\\) и \\(\\omega_2=25/600\\approx0.04167\\). Эти частоты соответствуют периодам \\(600/21\\approx28.57\\) и \\(24\\) дня соответственно.\n\n\n1.2.2 Использование розничных дебетовых карт в Исландии\n\ndata(\"debitcards\", package = \"fpp\")\nautoplot(debitcards)\n\n\n\n\n\n\n\n\nПохоже, что модель не аддитивная, прологарифмируем ее:\n\ndebit_log &lt;- log(debitcards)\nggtsdisplay(debit_log)\n\n\n\n\n\n\n\n\nСтало лучше. В ряде, очевидно, присутствует тренд. Удалим линейный тренд и построим периодограмму заного.\n\ndebit_detrended &lt;- tslm(debit_log ~ trend)$resid\nggtsdisplay(debit_detrended)\n\n\n\n\n\n\n\n\nПо виду остатков видно, что у ряда нелинейный тренд.\n\n\n1.2.3 Ежегодный минимальный уровень воды реки Нил\n\ndata(\"NileMin\", package = \"longmemo\")\nggtsdisplay(NileMin)"
  },
  {
    "objectID": "main.html#ачх",
    "href": "main.html#ачх",
    "title": "Статистический анализ временных рядов",
    "section": "2.1 АЧХ",
    "text": "2.1 АЧХ\nПостроим амплитудно-частотную характеристику (АЧХ) для некотопых фильтров.\n\nafc &lt;- function(filter, freq, plot = TRUE, ...) {\n  k &lt;- seq_along(filter) - 1\n  h &lt;- function(o) sum(rev(filter) * exp(-2i * pi * k * o))\n  res &lt;- list(freq = freq, afc = abs(sapply(freq, h)))\n  if (plot) {\n    plot(res$afc ~ res$freq, type = \"l\", xlab = \"frequency\", ylab = \"AFC\", ...)\n    invisible(res)\n  } else res\n}\n\nСкользащее среднее:\n\nfilt_ma &lt;- rep(1, 12)\nfreq &lt;- seq(0, 0.5, 0.001)\nafc(filt_ma, freq)\n\n\n\n\n\n\n\n\nПоследовательная разность:\n\nfilt_diff &lt;- c(-1, 1)\nafc(filt_diff, freq)\n\n\n\n\n\n\n\n\nСезонная разность:\n\nfilt_diff12 &lt;- c(1, rep(0, 11), -1) \nafc(filt_diff12, freq)"
  },
  {
    "objectID": "main.html#искусственные-данные-1",
    "href": "main.html#искусственные-данные-1",
    "title": "Статистический анализ временных рядов",
    "section": "2.2 Искусственные данные",
    "text": "2.2 Искусственные данные\nПрименим сезонную разность. Периодограмма до применения фильтра:\n\nset.seed(1234)\nseasonality &lt;- mapply(em_harmonic, N, c(1, 2) / 12, c(1.5, 1)) |&gt; rowSums()\nx1 &lt;- ts(seasonality + wn, frequency = 12)\nggperiodogram(x1)\n\n\n\n\n\n\n\n\nПосле применения фильтра видно, что значение периодограммы в точках, соответствующих периодам 12, 6, 4, 3, 2.4, 2 примерно нулевое.\n\nx1_deseason &lt;- stats::filter(x1, filt_diff12)\nggperiodogram(x1_deseason)\n\n\n\n\n\n\n\n\nТеперь рассмотрим ряд с экспоненциальным трендом и выделим его с помощью скользящего среднего:\n\ntrend &lt;- em_harmonic(N, 0, 5, 1 / N)\nx2 &lt;- ts(trend + wn)\nxyplot(\n  cbind(x2, trend),\n  superpose = TRUE,\n  lwd = c(1, 2),\n  auto.key = list(text = c(\"Original\", \"Trend\"), space = \"top\")\n)\n\n\n\n\n\n\n\n\n\nx2_ma &lt;- ts_filter(x2, c(0.5, rep(1, 19), 0.5) / 20, 2, \"renormalize\")\nx2_resid &lt;- x2 - x2_ma\nxyplot(\n  cbind(x2, trend, x2_ma),\n  superpose = TRUE,\n  col = c(\"grey\", \"red\", \"blue\"),\n  lwd = c(1, 2, 2),\n  auto.key = list(text = c(\"Original\", \"Trend\", \"Moving average\"), space = \"top\")\n)\n\n\n\n\n\n\n\n\nПериодограмма остатков:\n\nggperiodogram(x2_resid)\n\n\n\n\n\n\n\n\nОценим спектральную плотность с помощью скользащего среднего. Белый шум:\n\nspec_wn &lt;- ggperiodogram(wn)\nspec_wn_ma &lt;- ts_filter(\n  spec_wn$data$spectrum,\n  c(0.5, rep(1, 99), 0.5) / 100,\n  sides = 2,\n  boundary = \"renormalize\"\n)\nspec_wn + geom_line(aes(x = frequency, y = spec_wn_ma), colour = \"blue\")\n\n\n\n\n\n\n\n\nКрасный шум:\n\nspec_rn &lt;- ggperiodogram(rn)\nspec_rn_ma &lt;- ts_filter(\n  spec_rn$data$spec,\n  c(0.5, rep(1, 49), 0.5) / 50,\n  sides = 2,\n  boundary = \"renormalize\"\n)\nspec_rn + geom_line(aes(x = frequency, y = spec_rn_ma), colour = \"blue\")"
  },
  {
    "objectID": "main.html#реальные-данные-1",
    "href": "main.html#реальные-данные-1",
    "title": "Статистический анализ временных рядов",
    "section": "2.3 Реальные данные",
    "text": "2.3 Реальные данные\n\n2.3.1 Звездная величина\nС помощью сезонной разности выделим гармоники с периодами 29 и 24.\n\nstar24 &lt;- stats::filter(star, c(1, rep(0, 28), -1))\nstar29 &lt;- stats::filter(star, c(1, rep(0, 23), -1))\n\nggarrange(autoplot(star24), autoplot(star29), nrow = 2)\n\n\n\n\n\n\n\n\nПериодограммы остатков.\n\nper1 &lt;- ggperiodogram(star24) + xlim(0.02, 0.06)\nper2 &lt;- ggperiodogram(star29) + xlim(0.02, 0.06)\nggarrange(per1, per2, nrow = 2)\n\n\n\n\n\n\n\n\n\n\n2.3.2 Дебетовые карты\nВыделим тренд с помощью скользащего среднего.\n\ndebit_ma &lt;- ts_filter(debit_log, c(0.5, rep(1, 23), 0.5) / 24, 2, \"renormalize\")\nxyplot(\n  cbind(debit_log, debit_ma),\n  superpose = TRUE,\n  lwd = c(1, 2),\n  auto.key = list(text = c(\"Original\", \"Moving average\"), space = \"top\")\n)\n\n\n\n\n\n\n\n\nОстатки:\n\ndebit_detrend &lt;- debit_log - debit_ma\nggtsdisplay(debit_detrend)\n\n\n\n\n\n\n\n\nВ целом, тренд выделился хорошо. Теперь удалим сезонность и посмотрим на остатки:\n\ndebit_resid &lt;- stats::filter(debit_detrend, c(1, rep(0, 11), -1))\nggtsdisplay(debit_resid)\n\n## Warning: Removed 12 rows containing missing values or values outside the scale range\n## (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n2.3.3 Уровень воды реки Нил\nОценим тренд скользащим средним.\n\ndata(\"NileMin\")\n\n## Warning in data(\"NileMin\"): данные 'NileMin' не найдены\n\nNileMin_ma &lt;- ts_filter(NileMin, c(0.5, rep(1, 99), 0.5) / 100, 2, \"renormalize\")\nxyplot(\n  cbind(NileMin, NileMin_ma),\n  superpose = TRUE,\n  lwd = c(1, 2),\n  auto.key = list(text = c(\"Original\", \"Moving average\"), space = \"top\")\n)\n\n\n\n\n\n\n\n\nПолучился довольно неровный тренд."
  },
  {
    "objectID": "main.html#ранг",
    "href": "main.html#ранг",
    "title": "Статистический анализ временных рядов",
    "section": "3.1 Ранг",
    "text": "3.1 Ранг\nРанг гармоники с частотой \\(\\omega\\ne0.5\\) равен \\(2\\).\n\nN &lt;- 71\nL &lt;- 24\nx &lt;- em_harmonic(N, 1 / 12)\ns &lt;- ssa(x, L)\nplot(s)\n\n\n\n\n\n\n\nplot(s, \"vectors\")\n\n\n\n\n\n\n\n\nРанг гармоники с частотой \\(0.5\\) равен \\(1\\).\n\nx &lt;- em_harmonic(N, 0.5)\ns &lt;- ssa(x, L)\nplot(s)\n\n\n\n\n\n\n\nplot(s, \"vectors\")\n\n\n\n\n\n\n\n\nРанг полинома степени \\(p\\) равен \\(p+1\\).\n\nx &lt;- (1:N) + (1:N)^2 + 1\ns &lt;- ssa(x, L)\nplot(s)\n\n\n\n\n\n\n\nplot(s, \"vectors\")"
  },
  {
    "objectID": "main.html#разделимость",
    "href": "main.html#разделимость",
    "title": "Статистический анализ временных рядов",
    "section": "3.2 Разделимость",
    "text": "3.2 Разделимость\nСумма гармоник с разными амплитудами и частотами сильно разделима.\n\nA &lt;- c(2, 1, 0.5, 0.2)\nfreq &lt;- c(1, 2, 3, 5) / 12\nx &lt;- mapply(em_harmonic, N, freq, A) |&gt; rowSums()\ns &lt;- ssa(x, L)\n\n\nplot(s, \"vectors\")\n\n\n\n\n\n\n\n\nПо двумерному графику левых сингулярных векторов можно заметить, что соответствующие целому периоду \\(T\\) компоненты образовывают вершины правильного \\(T\\)-угольника (периоды \\(12\\), \\(6\\) и \\(4\\)), а компоненты, соответствующие периоду вида \\(p/q\\) с взаимно простыми целыми \\(p\\) и \\(q\\), образуют вершины правильного \\(p\\)-угольника (период \\(12/5=2.4\\))\n\nplot(s, \"paired\", idx = c(1, 3, 5, 7))\n\n\n\n\n\n\n\n\n\nplot(\n  reconstruct(s, list(S12 = 1:2, S6 = 3:4, S4 = 5:6, S2.4 = 7:8)),\n  plot.method = \"xyplot\"\n)\n\n\n\n\n\n\n\n\nСумма гармоник с разными частотами, но одинаковыми амплитудами слабо разделима, но не разделима по вкладам.\n\nx &lt;- mapply(em_harmonic, N, freq[1:2]) |&gt; rowSums()\ns &lt;- ssa(x, L)\nplot(s, \"vectors\", idx = 1:4)\n\n\n\n\n\n\n\n\nЛевые сингулярные векторы смешались друг с другом. Это также видно по матрице \\(W\\)-корреляций:\n\nplot(wcor(s, 1:4))\n\n\n\n\n\n\n\n\nРазделимости нет в случае суммы константы и экспоненты:\n\nx &lt;- ts(em_harmonic(N, 0, a = 0.02) + 10)\ns &lt;- ssa(x, L)\nplot(s)\n\n\n\n\n\n\n\n\nВидно, что разделимость по вкладу есть. Посмотрим на восстановленные компоненты:\n\nplot(\n  reconstruct(s, list(1, 2)),\n  plot.method = \"xyplot\",\n  superpose = TRUE,\n  add.residuals = FALSE,\n  auto.key = list(space = \"top\")\n)\n\n\n\n\n\n\n\n\nКонстанта явно не отделилась от экспоненты."
  },
  {
    "objectID": "main.html#искусственные-данные-2",
    "href": "main.html#искусственные-данные-2",
    "title": "Статистический анализ временных рядов",
    "section": "3.3 Искусственные данные",
    "text": "3.3 Искусственные данные\n\ns_x1 &lt;- ssa(x1)\nplot(s_x1, \"paired\")\n\n\n\n\n\n\n\n\nВыбираем первые \\(4\\) компоненты.\n\nr_s1 &lt;- reconstruct(s_x1, list(S12 = 1:2, S6 = 3:4))\nplot(r_s1, plot.method = \"xyplot\")\n\n\n\n\n\n\n\n\n\ns_x2 &lt;- ssa(x2)\nplot(s_x2, \"vectors\")\n\n\n\n\n\n\n\n\nУбеждаемся, что ранг экспоненциального тренда равен \\(1\\), выделим первую компоненту.\n\nr_x2 &lt;- reconstruct(s_x2, list(Trend = 1))\nplot(\n  r_x2,\n  plot.method = \"xyplot\",\n  superpose = TRUE,\n  lwd = c(1, 2, 1),\n  auto.key = list(space = \"top\")\n)"
  },
  {
    "objectID": "main.html#реальные-данные-2",
    "href": "main.html#реальные-данные-2",
    "title": "Статистический анализ временных рядов",
    "section": "3.4 Реальные данные",
    "text": "3.4 Реальные данные\n\n3.4.1 Звездная величина\n\ns_star &lt;- ssa(star)\nplot(s_star, \"vectors\")\n\n\n\n\n\n\n\nplot(s_star, \"paired\")\n\n\n\n\n\n\n\n\nСудя по двумерным графикам, компоненты \\(2\\) и \\(3\\), \\(4\\) и \\(5\\), \\(7\\) и \\(8\\) соответствуют гармоникам. Компоненты \\(7\\) и \\(8\\) соответствуют периоду \\(4\\), а период остальных гармоник оценить визуально затруднительно, поэтому воспользуемся parestimate.\n\nparestimate(s_star, list(2:3, 4:5, 7:8))\n\n## $F1\n##    period     rate   |    Mod     Arg  |     Re        Im\n##    28.800  -0.000016 |  0.99998   0.22 |  0.97628   0.21644\n##   -28.800  -0.000016 |  0.99998  -0.22 |  0.97628  -0.21644\n## \n## $F2\n##    period     rate   |    Mod     Arg  |     Re        Im\n##    24.152  -0.000027 |  0.99997   0.26 |  0.96632   0.25722\n##   -24.152  -0.000027 |  0.99997  -0.26 |  0.96632  -0.25722\n## \n## $F3\n##    period     rate   |    Mod     Arg  |     Re        Im\n##     4.005  -0.001537 |  0.99846   1.57 |  0.00186   0.99846\n##    -4.005  -0.001537 |  0.99846  -1.57 |  0.00186  -0.99846\n\n\nПолучили, что компоненты \\(2\\) и \\(3\\) соответствуют периоду \\(29\\), а \\(4\\) и \\(5\\) — периоду \\(24\\). Также убедились, что период компонент \\(7\\) и \\(8\\), действительно, равен \\(4\\). Также интересен период шестой компоненты, построим ее периодограмму:\n\nggperiodogram(s_star$U[, 6])\n\n\n\n\n\n\n\n\nПериодограмма имеет единственный пик в \\(\\omega=0.5\\), значит \\(6\\)-я компонента соответствует гармонике с периодом \\(2\\).\n\nr_star &lt;- reconstruct(s_star, groups = list(S29 = 2:3, S24 = 4:5, S2 = 6, S4 = 7:8))\nplot(r_star, plot.method = \"xyplot\")\n\n\n\n\n\n\n\n\n\n\n3.4.2 Дебетовые карты\nВозьмем длину окна, кратной всем периодам сезонности (т.е. \\(12\\), \\(6\\), \\(4\\), \\(3\\), \\(2.4\\) и \\(2\\)).\n\ns_debit &lt;- ssa(debit_log, 72)\nplot(s_debit, \"vectors\", idx = 1:20)\n\n\n\n\n\n\n\n\nПохоже, тренду соответствуют компоненты \\(1\\), \\(2\\) и \\(5\\). Но видно, что \\(5\\)-я компонента смешалась с гармоникой. Посмотрим на матрицу \\(W-корреляций\\):\n\nplot(wcor(s_debit, 1:25))\n\n\n\n\n\n\n\n\nДействительно, компоненты с \\(6\\) по \\(11\\) смешались друг с другом, \\(5\\)-я компонента смешалась вместе с ними. Также заметим, что \\(5\\)-я компонента коррелирует с компонентами \\(2\\) и \\(17\\), поэтому будем считать, что компоненты \\(1\\), \\(2\\) \\(5\\) и \\(17\\) соответствуют тренду.\n\nparestimate(s_debit, list(3:4, 10:11, 12:13, 14))\n\n## $F1\n##    period     rate   |    Mod     Arg  |     Re        Im\n##     6.055  -0.021244 |  0.97898   1.04 |  0.49755   0.84312\n##    -6.055  -0.021244 |  0.97898  -1.04 |  0.49755  -0.84312\n## \n## $F2\n##    period     rate   |    Mod     Arg  |     Re        Im\n##     4.037  -0.114560 |  0.89176   1.56 |  0.01297   0.89166\n##    -4.037  -0.114560 |  0.89176  -1.56 |  0.01297  -0.89166\n## \n## $F3\n##    period     rate   |    Mod     Arg  |     Re        Im\n##     2.994  -0.012886 |  0.98720   2.10 | -0.49747   0.85269\n##    -2.994  -0.012886 |  0.98720  -2.10 | -0.49747  -0.85269\n## \n## $F4\n##    period     rate   |    Mod     Arg  |     Re        Im\n##     2.000  -0.013771 |  0.98632   3.14 | -0.98632   0.00000\n\n\nКомопоненты \\(3\\) и \\(4\\), \\(10\\) и \\(11\\), \\(12\\) и \\(13\\), и \\(14\\) соответствуют гармоникам с периодами \\(6\\), \\(4\\), \\(3\\) и \\(2\\) соответственно. Поскольку комопонент сезонности всего \\(2 \\cdot 5 + 1=11\\), возьмем компоненты \\(3\\), \\(4\\) и с \\(6\\) по \\(14\\).\n\nr_debit &lt;- reconstruct(s_debit, list(Trend = c(1:2, 5, 17), Seasonality = c(3:4, 6:14)))\nplot(r_debit, plot.method = \"xyplot\")\n\n\n\n\n\n\n\n\nВзглянем на периодограмму остатков:\n\nggperiodogram(resid(r_debit))\n\n\n\n\n\n\n\n\nКак видим, сезонность успешно удалена.\nСравним полученный с помощью SSA тренд с трендом, полученным с помощью скользащего среднего ранее.\n\nxyplot(\n  cbind(debit_log, r_debit$Trend, debit_ma),\n  superpose = TRUE,\n  col = c(\"grey\", \"red\", \"blue\"),\n  lwd = c(1, 2, 2),\n  auto.key = list(text = c(\"Original\", \"SSA\", \"Moving average\"), space = \"top\")\n)\n\n\n\n\n\n\n\n\nПолучили примерно тоже самое, но у SSA получился более точный тренд на концах.\n\n\n3.4.3 Уровень реки Нил\n\ns_NileMin &lt;- ssa(NileMin)\nplot(s_NileMin, \"vectors\")\n\n\n\n\n\n\n\n\nКомпоненты \\(2\\) и \\(3\\) соответствуют гармонике с некоторым периодом. Оценим его:\n\nparestimate(s_NileMin, list(2:3))\n\n##    period     rate   |    Mod     Arg  |     Re        Im\n##   237.862   0.000346 |  1.00035   0.03 |  1.00000   0.02642\n##  -237.862   0.000346 |  1.00035  -0.03 |  1.00000  -0.02642\n\n\nПериод гармоники составлят примерно \\(238\\) лет. Это достаточно большой период, поэтому включим компоненты \\(2\\) и \\(3\\) в тренд вместе с компонентой \\(1\\).\n\nr_NileMin &lt;- reconstruct(s_NileMin, list(Trend = 1:3))\nplot(\n  r_NileMin,\n  plot.method = \"xyplot\",\n  superpose = TRUE,\n  lwd = c(1, 2, 1),\n  auto.key = list(space = \"top\")\n)\n\n\n\n\n\n\n\n\nСтравним полученный тренд со скользащим средним.\n\nxyplot(\n  cbind(NileMin, r_NileMin$Trend, NileMin_ma),\n  superpose = TRUE,\n  col = c(\"grey\", \"red\", \"blue\"),\n  lwd = c(1, 2, 2),\n  auto.key = list(text = c(\"Original\", \"SSA\", \"Moving average\"), space = \"top\")\n)\n\n\n\n\n\n\n\n\nУ SSA получился более плавный тренд."
  },
  {
    "objectID": "main.html#ряды-без-шума",
    "href": "main.html#ряды-без-шума",
    "title": "Статистический анализ временных рядов",
    "section": "13.1 Ряды без шума",
    "text": "13.1 Ряды без шума\nВозьмем \\(x_n=\\cos(2 \\pi n/ 5 + \\pi / 4)\\).\n\nN &lt;- 99\nsignal2 &lt;- ts(em_harmonic(N, freq = 0.2, phase = pi / 4))\nfind_lrr(signal2, list(1:2))\n\n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##   period     phase coef modulus order\n## 1      5 0.7853982    1       1     1\n\n\nТеперь возьмем многочлен \\(2\\) степени: \\(x_n=n^2+2n+5\\).\n\nfind_lrr((1:N)^2 + 2 * (1:N) + 5, list(1:3), tol = 1e-4)\n\n## Trend components:\n##  coef * modulus^n * n^(order-1)\n##   coef modulus order\n## 1    5       1     1\n## 2    2       1     2\n## 3    1       1     3\n\n\nПоследовательность Фибоначчи: \\(F_n=F_{n-1}+F_{n-2}\\).\n\nl &lt;- find_lrr(c(1, 1, 2, 3), list(1:2))\n\n## Trend components:\n##  coef * modulus^n * n^(order-1)\n##        coef  modulus order\n## 1 0.4472136 1.618034     1\n## \n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##   period phase       coef  modulus order\n## 1      2     0 -0.4472136 0.618034     1\n\n\nПолучили явную формулу: \\[\nF_n = \\frac{\\left(\\frac{1 + \\sqrt{5}}{2}\\right)^n-\\left(\\frac{1-\\sqrt{5}}{2}\\right)}{\\sqrt{5}}.\n\\] Первые \\(10\\) чисел Фибоначчи:\n\ngenerate_lrr(l, 10)\n\n##  [1]  1  1  2  3  5  8 13 21 34 55\n\n\nСигнал ранга \\(7\\) с кратными корнями: \\[\nx_n=0.1n\\cdot e^{0.025 n}\\cos(2 \\pi n / 10 + \\pi / 2) + n\\cdot e^{0.02n} + 10\\cdot(-1)^n.\n\\]\n\nsignal7 &lt;- mapply(em_harmonic, N, c(0.1, 0, 0.5), c(0.1, 1, 10), c(0.025, 0.02, 0), c(pi / 2, 0, 0))\nsignal7 &lt;- ts((1:N) * rowSums(signal7[, 1:2]) + signal7[, 3])\nxyplot(signal7)\n\n\n\n\n\n\n\n\n\nfind_lrr(signal7, list(1:7))\n\n## Trend components:\n##  coef * modulus^n * n^(order-1)\n##            coef  modulus order\n## 1 -1.129006e-10 1.020201     1\n## 2  1.000000e+00 1.020201     2\n## \n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##   period    phase         coef  modulus order\n## 1     10 1.032525 1.958805e-10 1.025315     1\n## 2     10 1.570796 1.000000e-01 1.025315     2\n## 3      2 0.000000 1.000000e+01 1.000000     1"
  },
  {
    "objectID": "main.html#ряды-с-шумом",
    "href": "main.html#ряды-с-шумом",
    "title": "Статистический анализ временных рядов",
    "section": "13.2 Ряды с шумом",
    "text": "13.2 Ряды с шумом\nТеперь добавим во временные ряды шум.\n\nset.seed(1234)\nx1 &lt;- ts(signal2 + rnorm(N))\nL &lt;- (N + 1) %/% 2\nplot(ssa(x1, L), \"vectors\")\n\n\n\n\n\n\n\n\n\nl &lt;- find_lrr(x1, list(1:2), L = L)\n\n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##     period     phase     coef   modulus order\n## 1 4.991823 0.5467411 1.307025 0.9965079     1\n\nsignal2_est &lt;- generate_lrr(l, N)\nxyplot(\n  cbind(x1, signal2, signal2_est),\n  superpose = TRUE,\n  lwd = c(2, 1, 1),\n  col = c(\"grey\", \"blue\", \"red\"),\n  auto.key = list(\n    text = c(\"Original\", \"Signal\", \"LRR\"),\n    space = \"top\"\n  )\n)\n\n\n\n\n\n\n\n\n\nset.seed(1234)\nx2 &lt;- signal7 + rnorm(N, sd = 3)\ns &lt;- ssa(x2, L)\nplot(s, \"vectors\")\n\n\n\n\n\n\n\n\n\nl &lt;- find_lrr(x2, list(1:7), 1e-1, L = L)\n\n## Trend components:\n##  coef * modulus^n * n^(order-1)\n##        coef  modulus order\n## 1 4.5719381 1.022112     1\n## 2 0.8006677 1.022112     2\n## \n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##     period     phase       coef  modulus order\n## 1 9.558335  1.612570 20.4914438 1.007702     1\n## 2 9.558335 -1.149913  0.6222523 1.007702     2\n## 3 2.000000  0.000000  9.3538127 1.000703     1\n\nsignal7_est &lt;- generate_lrr(l, N)\nxyplot(\n  cbind(x2, signal7, signal7_est),\n  superpose = TRUE,\n  lwd = c(2, 1, 1),\n  col = c(\"grey\", \"blue\", \"red\"),\n  auto.key = list(\n    text = c(\"Original\", \"Signal\", \"LRR\"),\n    space = \"top\"\n  )\n)"
  },
  {
    "objectID": "main.html#итерации-cadzow",
    "href": "main.html#итерации-cadzow",
    "title": "Статистический анализ временных рядов",
    "section": "13.3 Итерации Cadzow",
    "text": "13.3 Итерации Cadzow\n\ncadz &lt;- cadzow(ssa(x1, L), rank = 2)\nl &lt;- find_lrr(cadz, list(1:2))\n\n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##     period     phase     coef  modulus order\n## 1 4.991186 0.4901042 1.148965 0.998917     1\n\nxyplot(\n  cbind(x1, signal2, signal2_est, generate_lrr(l, N)),\n  superpose = TRUE,\n  lwd = c(2, 1, 1, 1),\n  col = c(\"grey\", \"blue\", \"red\", \"orange\"),\n  auto.key = list(\n    text = c(\"Original\", \"Signal\", \"LRR\", \"LRR (Cadzow)\"),\n    space = \"top\"\n  )\n)\n\n\n\n\n\n\n\n\n\ncadz &lt;- cadzow(s, rank = 7)\nl &lt;- find_lrr(cadz, list(1:7), 1e-1)\n\n## Trend components:\n##  coef * modulus^n * n^(order-1)\n##        coef  modulus order\n## 1 0.2552370 1.022752     1\n## 2 0.9010348 1.022752     2\n## \n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##     period     phase       coef  modulus order\n## 1 9.832848 -2.576600 0.51778788 1.029397     1\n## 2 9.832848  1.046366 0.09722059 1.029397     2\n## 3 2.000000  0.000000 9.59245572 1.000489     1\n\nxyplot(\n  cbind(x2, signal7, signal7_est, generate_lrr(l, N)),\n  superpose = TRUE,\n  lwd = c(2, 1, 1, 1),\n  col = c(\"grey\", \"blue\", \"red\", \"orange\"),\n  auto.key = list(\n    text = c(\"Original\", \"Signal\", \"LRR\", \"LRR (Cadzow)\"),\n    space = \"top\"\n  )\n)"
  },
  {
    "objectID": "main.html#реальные-данные-3",
    "href": "main.html#реальные-данные-3",
    "title": "Статистический анализ временных рядов",
    "section": "13.4 Реальные данные",
    "text": "13.4 Реальные данные\n\n13.4.1 Звездная величина\n\nlrr_star &lt;- find_lrr(star, list(1:8), L = 300)\n\n## Trend components:\n##  coef * modulus^n * n^(order-1)\n##       coef modulus order\n## 1 17.08536       1     1\n## \n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##      period      phase        coef   modulus order\n## 1 29.000385 -0.9201414 10.03231466 0.9999996     1\n## 2 24.000350 -1.8316651  7.08328917 1.0000005     1\n## 3  4.006397  2.2820793  0.17480931 0.9993565     1\n## 4  2.000000  0.0000000 -0.09289724 0.9997528     1\n\nxyplot(\n  cbind(star, generate_lrr(lrr_star, length(star))),\n  superpose = TRUE,\n  lwd = c(2, 1),\n  col = c(\"grey\", \"red\"),\n  auto.key = list(\n    text = c(\"Original\", \"LRR\"),\n    space = \"top\"\n  )\n)\n\n\n\n\n\n\n\n\n\n\n13.4.2 Дебетовые карты\n\nlrr_debit &lt;- find_lrr(debit_log, list(1:17), L = 72)\n\n## Trend components:\n##  coef * modulus^n * n^(order-1)\n##         coef   modulus order\n## 1  9.3078532 1.0004711     1\n## 2 -0.4863133 0.8959641     1\n## \n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##       period       phase       coef   modulus order\n## 1 108.553080  1.25683993 0.39214658 0.9802381     1\n## 2  26.110282  2.90452136 0.01428862 1.0021357     1\n## 3  11.949408  1.69862902 0.05174943 1.0026616     1\n## 4   6.007907  0.05996315 0.06774916 1.0001200     1\n## 5   3.993595 -0.07329578 0.07002082 0.9982916     1\n## 6   2.995728  0.07796689 0.04960291 0.9998363     1\n## 7   2.400701 -0.43360236 0.05821820 1.0006862     1\n## 8   2.000000  0.00000000 0.03260017 0.9970358     1\n\nxyplot(\n  cbind(debit_log, generate_lrr(lrr_debit, length(debit_log))),\n  superpose = TRUE,\n  lwd = c(2, 1),\n  col = c(\"grey\", \"red\"),\n  auto.key = list(\n    text = c(\"Original\", \"LRR\"),\n    space = \"top\"\n  )\n)\n\n\n\n\n\n\n\n\n\n\n13.4.3 Уровень воды реки Нил\n\nlrr_NileMin &lt;- find_lrr(NileMin, list(1:3), L = 332)\n\n## Trend components:\n##  coef * modulus^n * n^(order-1)\n##       coef  modulus order\n## 1 1076.205 1.000196     1\n## \n## Periodic components:\n##  coef * modulus^n * n^(order-1) * cos(2 * pi * n / period + phase)\n##     period      phase     coef  modulus order\n## 1 237.9421 -0.6652448 52.17252 1.000337     1\n\nxyplot(\n  cbind(NileMin, generate_lrr(lrr_NileMin, length(NileMin))),\n  superpose = TRUE,\n  col = c(\"grey\", \"red\"),\n  lwd = c(1, 2),\n  auto.key = list(\n    text = c(\"Original\", \"LRR\"),\n    space = \"top\"\n  )\n)"
  },
  {
    "objectID": "main.html#модельные-ряды",
    "href": "main.html#модельные-ряды",
    "title": "Статистический анализ временных рядов",
    "section": "15.1 Модельные ряды",
    "text": "15.1 Модельные ряды\nВозьмем те же ряды, на которых проверяли IOSSA.\n\nset.seed(1234)\nx &lt;- mapply(em_harmonic, N, c(0.1, 0.092, 0.15), c(3, 1, 2)) |&gt; rowSums()\nx &lt;- ts(x + 0.1 * rnorm(N))\ns &lt;- ssa(x)\neos &lt;- eossa_new(s, 1:6, clust_type = \"distance\")\nplot(reconstruct(eos, eos$iossa.groups), plot.method = \"xyplot\")\n\n\n\n\n\n\n\n\n\nx &lt;- ts(em_harmonic(N, 0, a = 0.02) + 10)\ns &lt;- ssa(x)\neos &lt;- eossa_new(s, 1:2, clust_type = \"distance\")\nplot(\n  reconstruct(eos, eos$iossa.groups),\n  plot.method = \"xyplot\",\n  superpose = TRUE,\n  add.residuals = FALSE,\n  auto.key = list(space = \"top\")\n)"
  },
  {
    "objectID": "main.html#реальные-данные-4",
    "href": "main.html#реальные-данные-4",
    "title": "Статистический анализ временных рядов",
    "section": "15.2 Реальные данные",
    "text": "15.2 Реальные данные\n\n15.2.1 Дебетовые карты\n\nplot(s_debit, \"vectors\", idx = 1:20)\n\n\n\n\n\n\n\neos_debit &lt;- eossa_new(s_debit, c(1:14, 17), clust_type = \"distance\")\nplot(eos_debit, \"vectors\", idx = 1:20)\n\n## Warning in .contribution(x, idx, ...): Elementary matrices are not F-orthogonal\n## (max F-cor is -0.193). Contributions can be irrelevant\n\n\n\n\n\n\n\n\n\n\nreos_debit &lt;-  reconstruct(eos_debit, list(Trend = 1:4, Seasonality = c(5:14, 17)))\nplot(\n  reos_debit,\n  plot.method = \"xyplot\",\n  add.residuals = FALSE\n)\n\n\n\n\n\n\n\n\nСравним тренд с тренд и сезонность, полученных с помощью EOSSA и Basic SSA:\n\nxyplot(\n  cbind(debit_log, r_debit$Trend, reos_debit$Trend),\n  superpose = TRUE,\n  lwd = c(1, 2, 2),\n  auto.key = list(text = c(\"Original\", \"SSA\", \"EOSSA\"), space = \"top\")\n)\n\n\n\n\n\n\n\n\n\nxyplot(\n  cbind(r_debit$Seasonality, reos_debit$Seasonality),\n  superpose = TRUE,\n  auto.key = list(text = c(\"SSA\", \"EOSSA\"), space = \"top\")\n)"
  },
  {
    "objectID": "main.html#бутстреп-доверительныепредсказательные-интервалы",
    "href": "main.html#бутстреп-доверительныепредсказательные-интервалы",
    "title": "Статистический анализ временных рядов",
    "section": "17.1 Бутстреп-доверительные/предсказательные интервалы",
    "text": "17.1 Бутстреп-доверительные/предсказательные интервалы\nПоскольку рекурентный прогноз оказался точнее, будем использовать именно его. Доверительные интервалы:\n\nfс_conf &lt;- forecast(s_debit, list(1:14), 24, interval = \"conf\")\nautoplot(fс_conf, flwd = 1, ylab = \"\") +\n  autolayer(debitcards, color = \"black\")\n\n\n\n\n\n\n\n\nПредсказательные интервалы:\n\nfс_pred &lt;- forecast(s_debit, list(1:14), 24, interval = \"pred\")\nautoplot(fс_pred, flwd = 1, ylab = \"\") +\n  autolayer(debitcards, color = \"black\")\n\n\n\n\n\n\n\n\nПредсказательные интервалы, как и ожидалось, шире, чем доверительные. Заметим, что предсказанные значения лежат ближе к нижней границе интервалов, а для доверительных интервалов некоторые значения лежат даже ниже ее. Можно делать прогноз тоже бутстрепом:\n\nfc_bootstrap &lt;-\n  forecast(s_debit, list(1:14), 24, interval = \"pred\", only.intervals = FALSE)\nautoplot(fc_bootstrap, flwd = 1, ylab = \"\") +\n  autolayer(debitcards, color = \"black\")\n\n\n\n\n\n\n\n\n\nrmse_debit &lt;- add_row(\n  rmse_debit,\n  Method = c(\"SSA (recurrent with bootstrap)\"),\n  RMSE = rmse(debitcards, fc_bootstrap$mean)\n)\nrmse_debit |&gt; arrange(RMSE)\n\n\n\n\n\nMethod\nRMSE\n\n\n\n\nSSA (recurrent)\n1436.799\n\n\nSSA (vector)\n2363.807\n\n\nSSA (recurrent with bootstrap)\n2845.190"
  },
  {
    "objectID": "main.html#sequential",
    "href": "main.html#sequential",
    "title": "Статистический анализ временных рядов",
    "section": "18.1 Sequential",
    "text": "18.1 Sequential\n\ns &lt;- ssa(debit_gapped, 48, svd.method = \"svd\")\neos &lt;- eossa_new(s, list(1:15), \"distance\", delta = 1e-5)\n\ngo &lt;- gapfill(eos, list(1:2), \"original\", \"sequential\")\ng &lt;- gapfill(eos, list(1:2), \"reconstructed\", \"sequential\")\n\nautoplot(debitcards, ylab = \"\", color = \"grey\", lwd = 1) +\n  autolayer(go, series = \"original\", lwd = 1) +\n  autolayer(g, series = \"reconstructed\", lwd = 1)"
  },
  {
    "objectID": "main.html#simultaneous",
    "href": "main.html#simultaneous",
    "title": "Статистический анализ временных рядов",
    "section": "18.2 Simultaneous",
    "text": "18.2 Simultaneous\n\ngo &lt;- gapfill(eos, list(1:2), \"original\", \"simultaneous\")\ng &lt;- gapfill(eos, list(1:2), \"reconstructed\", \"simultaneous\")\n\nautoplot(debitcards, ylab = \"\") +\n  autolayer(debit_gap, color = \"grey\", lwd = 1) +\n  autolayer(go, series = \"original\", lwd = 1) +\n  autolayer(g, series = \"reconstructed\", lwd = 1)"
  },
  {
    "objectID": "main.html#iterative",
    "href": "main.html#iterative",
    "title": "Статистический анализ временных рядов",
    "section": "18.3 Iterative",
    "text": "18.3 Iterative\n\nigo &lt;- igapfill(eos, list(1:2), base = \"original\")\nig &lt;- igapfill(eos, list(1:2), base = \"reconstructed\")\n\nautoplot(debit_gap, ylab = \"\", color = \"grey\", lwd = 1) +\n  autolayer(igo, series = \"original\", lwd = 1) +\n  autolayer(ig, series = \"reconstructed\", lwd = 1)"
  },
  {
    "objectID": "main.html#сравнение-gapfill-и-igapfill",
    "href": "main.html#сравнение-gapfill-и-igapfill",
    "title": "Статистический анализ временных рядов",
    "section": "18.4 Сравнение gapfill и igapfill",
    "text": "18.4 Сравнение gapfill и igapfill\n\n18.4.1 Ряд без тренда\n\nN &lt;- length(signal2)\nautoplot(signal2, ylab = \"\")\n\n\n\n\n\n\n\n\n\n# Setting up parallel computing\nplan(multisession, workers = min(15, detectCores() - 1))\nregisterDoFuture()\n\n\ngapfill_errors &lt;- function(gap_idx, signal, groups, M = 500, ...) {\n  mse &lt;- foreach(i = 1:M) %dorng% {\n    x_gap &lt;- signal + rnorm(N, ...)\n    x_gap[gap_idx] &lt;- NA\n    s &lt;- ssa(x_gap, 30, svd.method = \"svd\")\n    \n    g_seq &lt;- gapfill(s, groups, method = \"sequential\")\n    g_simult &lt;- gapfill(s, groups, method = \"simultaneous\")\n    ig &lt;- igapfill(s, groups, maxiter = 50)\n    \n    mse.gapfill_seq &lt;- mean((g_seq[gap_idx] - signal[gap_idx])^2)\n    mse.gapfill_simult &lt;- mean((g_simult[gap_idx] - signal[gap_idx])^2)\n    mse.igapfill &lt;- mean((ig[gap_idx] - signal[gap_idx])^2)\n    \n    c(mse.gapfill_seq, mse.gapfill_simult, mse.igapfill)\n  }\n  mse &lt;- do.call(rbind, mse) |&gt; data.frame()\n  colnames(mse) &lt;- c(\"gapfill_seq\", \"gapfill_simult\", \"igapfill\")\n  tidyr::pivot_longer(mse, cols = 1:3)\n}\n\n“Дырка” в середине:\n\nset.seed(123)\nmse_center1 &lt;- gapfill_errors(45:54, signal2, list(1:2), sd = 0.5)\nggplot(mse_center1) + geom_boxplot(aes(name, value)) + xlab(\"\") + ylab(\"MSE\")\n\n\n\n\n\n\n\n\n“Дырка” в конце:\n\nset.seed(123)\nmse_end1 &lt;- gapfill_errors(90:99, signal2, list(1:2), sd = 0.5)\nggplot(mse_end1) + geom_boxplot(aes(name, value)) + xlab(\"\") + ylab(\"MSE\")\n\n\n\n\n\n\n\n\n\n\n18.4.2 Ряд c трендом\nРассмотрим уже знакомый нам сигнал ранга \\(7\\):\n\nautoplot(signal7, ylab = \"\", lwd = 1)\n\n\n\n\n\n\n\n\n“Дырка” в середине:\n\nset.seed(123)\nmse_center2 &lt;- gapfill_errors(45:54, signal7, list(1:7), sd = 0.5)\nggplot(mse_center2) + geom_boxplot(aes(x = name, y = value)) + xlab(\"\") + ylab(\"MSE\")\n\n\n\n\n\n\n\n\n“Дырка” в конце:\n\nset.seed(123)\nmse_end2 &lt;- gapfill_errors(90:99, signal7, list(1:7), sd = 0.5)\nggplot(mse_end2) + geom_boxplot(aes(x = name, y = value)) + xlab(\"\") + ylab(\"MSE\") + scale_y_log10()\n\n\n\n\n\n\n\n\nПосмотрим, как выглядит заполнение пропусков (которое, вообще говоря, в данном случае является прогнозом):\n\nset.seed(123)\nx2 &lt;- x2_gap &lt;- signal7 + rnorm(N, sd = 0.5)\nx2_gap[90:99] &lt;- NA\ns &lt;- ssa(x2_gap, 30, svd.method = \"svd\")\nplot(s, \"vectors\", idx = 1:10)\n\n\n\n\n\n\n\n\n\ng_seq &lt;- gapfill(s, list(1:7), method = \"sequential\")\ng_simult &lt;- gapfill(s, list(1:7), method = \"simultaneous\")\nig &lt;- igapfill(s, list(1:7), maxiter = 50)\n\nautoplot(x2, ylab = \"\", lwd = 1) +\n  autolayer(g_seq, series = \"sequential\", lwd = 1) +\n  autolayer(g_simult, series = \"simultaneous\", lwd = 1) +\n  autolayer(ig, series = \"iterative\", lwd = 1)"
  },
  {
    "objectID": "main.html#модельные-ряды-1",
    "href": "main.html#модельные-ряды-1",
    "title": "Статистический анализ временных рядов",
    "section": "19.1 Модельные ряды",
    "text": "19.1 Модельные ряды\n\nset.seed(123)\nx &lt;- arima.sim(list(ar = c(0.7, 0.1)), n = 10000)\nggtsdisplay(x, plot.type = \"partial\", lag.max = 50, main = \"ARIMA(2, 0, 0)\")\n\n\n\n\n\n\n\n\nУ PACF значимых лагов \\(2\\), что соответствует реальной модели.\n\n(fit &lt;- Arima(x, c(2, 0, 0), include.mean = FALSE))\n\n## Series: x \n## ARIMA(2,0,0) with zero mean \n## \n## Coefficients:\n##          ar1     ar2\n##       0.6841  0.1113\n## s.e.  0.0099  0.0099\n## \n## sigma^2 = 0.9977:  log likelihood = -14177.4\n## AIC=28360.8   AICc=28360.8   BIC=28382.43\n\n\nМодель также правильно определяется автоматически:\n\n(auto_fit &lt;- auto.arima(x, stationary = TRUE, stepwise = FALSE))\n\n## Series: x \n## ARIMA(2,0,0) with zero mean \n## \n## Coefficients:\n##          ar1     ar2\n##       0.6841  0.1113\n## s.e.  0.0099  0.0099\n## \n## sigma^2 = 0.9977:  log likelihood = -14177.4\n## AIC=28360.8   AICc=28360.8   BIC=28382.43\n\n\n\nset.seed(123)\nx &lt;- arima.sim(list(ar = c(0.5, -0.1), ma = c(0.9)), n = 10000)\nggtsdisplay(x, plot.type = \"partial\", lag.max = 50, main = \"ARIMA(2, 0, 1)\")\n\n\n\n\n\n\n\n\nПо ACF и PACF похоже на модель MA(3).\n\n(fit &lt;- Arima(x, c(0, 0, 3), include.mean = FALSE))\n\n## Series: x \n## ARIMA(0,0,3) with zero mean \n## \n## Coefficients:\n##          ma1     ma2     ma3\n##       1.3812  0.5699  0.1265\n## s.e.  0.0098  0.0157  0.0098\n## \n## sigma^2 = 0.9982:  log likelihood = -14180.03\n## AIC=28368.05   AICc=28368.06   BIC=28396.89\n\ncheckresiduals(fit, lag.max = 50)\n\n\n\n\n\n\n\n\n## \n##  Ljung-Box test\n## \n## data:  Residuals from ARIMA(0,0,3) with zero mean\n## Q* = 6.0302, df = 7, p-value = 0.5362\n## \n## Model df: 3.   Total lags used: 10\n\n\nПрименим auto.arima:\n\nauto_fit &lt;- auto.arima(\n  x,\n  max.p = 3, max.q = 3,\n  stationary = TRUE,\n  trace = TRUE,\n  stepwise = FALSE,\n  approximation = FALSE,\n  allowmean = FALSE\n)\n\n## \n##  ARIMA(0,0,0) with zero mean     : 40222.91\n##  ARIMA(0,0,1) with zero mean     : 30387.46\n##  ARIMA(0,0,2) with zero mean     : 28527.76\n##  ARIMA(0,0,3) with zero mean     : 28368.06\n##  ARIMA(1,0,0) with zero mean     : 33604.95\n##  ARIMA(1,0,1) with zero mean     : 28432.29\n##  ARIMA(1,0,2) with zero mean     : 28368.35\n##  ARIMA(1,0,3) with zero mean     : 28366.11\n##  ARIMA(2,0,0) with zero mean     : 31199.61\n##  ARIMA(2,0,1) with zero mean     : 28364.4\n##  ARIMA(2,0,2) with zero mean     : 28366.32\n##  ARIMA(2,0,3) with zero mean     : 28367.98\n##  ARIMA(3,0,0) with zero mean     : 30162.9\n##  ARIMA(3,0,1) with zero mean     : 28366.31\n##  ARIMA(3,0,2) with zero mean     : 28368.29\n## \n## \n## \n##  Best model: ARIMA(2,0,1) with zero mean\n\nauto_fit\n\n## Series: x \n## ARIMA(2,0,1) with zero mean \n## \n## Coefficients:\n##          ar1      ar2     ma1\n##       0.4844  -0.0908  0.8997\n## s.e.  0.0109   0.0108  0.0048\n## \n## sigma^2 = 0.9978:  log likelihood = -14178.2\n## AIC=28364.4   AICc=28364.4   BIC=28393.24\n\n\nМодель подобралась верно, хотя значения IC для моделей довольно близки (\\(28368.06\\) и \\(28364.4\\)).\n\nset.seed(123)\nx &lt;- arima.sim(list(ar = 0.4), n = 1000) + 0.1\nx &lt;- cumsum(x)\nggtsdisplay(x, \"partial\", main = \"ARIMA(1, 1, 0) with drift\")\n\n\n\n\n\n\n\n\nОчевидно, что ряд нестационарный. Проверим ряд на наличие единичного корня:\n\nadf.test(x)\n\n## \n##  Augmented Dickey-Fuller Test\n## \n## data:  x\n## Dickey-Fuller = -2.6459, Lag order = 9, p-value = 0.3049\n## alternative hypothesis: stationary\n\n\nПродифференцируем ряд:\n\nggtsdisplay(diff(x), \"partial\")\n\n\n\n\n\n\n\n\nПохоже на AR(1) процесс. Подберем лучшую модель:\n\n(auto_fit &lt;- auto.arima(x, stepwise = FALSE, approximation = FALSE))\n\n## Series: x \n## ARIMA(1,1,0) with drift \n## \n## Coefficients:\n##          ar1   drift\n##       0.3620  0.1218\n## s.e.  0.0296  0.0493\n## \n## sigma^2 = 0.9919:  log likelihood = -1412.51\n## AIC=2831.02   AICc=2831.04   BIC=2845.74\n\ncheckresiduals(auto_fit)\n\n\n\n\n\n\n\n\n## \n##  Ljung-Box test\n## \n## data:  Residuals from ARIMA(1,1,0) with drift\n## Q* = 3.0964, df = 9, p-value = 0.9603\n## \n## Model df: 1.   Total lags used: 10\n\n\nСделаем прогноз:\n\nautoplot(forecast(auto_fit), include = 200, ylab = \"\")\n\n\n\n\n\n\n\n\n\nts1 &lt;- as.ts(read.csv(\"./data/ts1.txt\", sep=\"\"))\nggtsdisplay(ts1, plot.type = \"partial\", lag.max = 50)\n\n\n\n\n\n\n\n\nPACF обрывается после лага \\(2\\), а ACF экспоненциально затухает. Поэтому выберем модель ARIMA(2, 0, 0).\n\n(fit &lt;- Arima(ts1, c(2, 0, 0)))\n\n## Series: ts1 \n## ARIMA(2,0,0) with non-zero mean \n## \n## Coefficients:\n##          ar1      ar2     mean\n##       0.8565  -0.1585  99.9187\n## s.e.  0.0312   0.0313   0.1083\n## \n## sigma^2 = 1.076:  log likelihood = -1454.25\n## AIC=2916.5   AICc=2916.54   BIC=2936.13\n\ncheckresiduals(fit, lag.max = 50)\n\n\n\n\n\n\n\n\n## \n##  Ljung-Box test\n## \n## data:  Residuals from ARIMA(2,0,0) with non-zero mean\n## Q* = 10.412, df = 8, p-value = 0.2373\n## \n## Model df: 2.   Total lags used: 10\n\n\nТеперь автоматически подберем модель:\n\nauto_fit &lt;- auto.arima(\n  ts1,\n  max.p = 3, max.q = 3,\n  stationary = TRUE,\n  trace = TRUE,\n  stepwise = FALSE,\n  approximation = FALSE\n)\n\n## \n##  ARIMA(0,0,0) with zero mean     : 12048.89\n##  ARIMA(0,0,0) with non-zero mean : 3725.26\n##  ARIMA(0,0,1) with zero mean     : Inf\n##  ARIMA(0,0,1) with non-zero mean : 3137.908\n##  ARIMA(0,0,2) with zero mean     : 9457.261\n##  ARIMA(0,0,2) with non-zero mean : 2992.972\n##  ARIMA(0,0,3) with zero mean     : 8347.406\n##  ARIMA(0,0,3) with non-zero mean : 2935.968\n##  ARIMA(1,0,0) with zero mean     : Inf\n##  ARIMA(1,0,0) with non-zero mean : 2939.839\n##  ARIMA(1,0,1) with zero mean     : Inf\n##  ARIMA(1,0,1) with non-zero mean : 2916.03\n##  ARIMA(1,0,2) with zero mean     : Inf\n##  ARIMA(1,0,2) with non-zero mean : 2917.988\n##  ARIMA(1,0,3) with zero mean     : Inf\n##  ARIMA(1,0,3) with non-zero mean : 2919.812\n##  ARIMA(2,0,0) with zero mean     : Inf\n##  ARIMA(2,0,0) with non-zero mean : 2916.543\n##  ARIMA(2,0,1) with zero mean     : Inf\n##  ARIMA(2,0,1) with non-zero mean : 2917.977\n##  ARIMA(2,0,2) with zero mean     : Inf\n##  ARIMA(2,0,2) with non-zero mean : 2908.231\n##  ARIMA(2,0,3) with zero mean     : Inf\n##  ARIMA(2,0,3) with non-zero mean : 2908.491\n##  ARIMA(3,0,0) with zero mean     : Inf\n##  ARIMA(3,0,0) with non-zero mean : 2917.992\n##  ARIMA(3,0,1) with zero mean     : Inf\n##  ARIMA(3,0,1) with non-zero mean : 2907.243\n##  ARIMA(3,0,2) with zero mean     : Inf\n##  ARIMA(3,0,2) with non-zero mean : 2909.217\n## \n## \n## \n##  Best model: ARIMA(3,0,1) with non-zero mean\n\nauto_fit\n\n## Series: ts1 \n## ARIMA(3,0,1) with non-zero mean \n## \n## Coefficients:\n##           ar1     ar2      ar3     ma1     mean\n##       -0.0917  0.6303  -0.1186  0.9664  99.9183\n## s.e.   0.0375  0.0337   0.0333  0.0197   0.1101\n## \n## sigma^2 = 1.063:  log likelihood = -1447.58\n## AIC=2907.16   AICc=2907.24   BIC=2936.61\n\ncheckresiduals(auto_fit, lag.max = 50)\n\n\n\n\n\n\n\n\n## \n##  Ljung-Box test\n## \n## data:  Residuals from ARIMA(3,0,1) with non-zero mean\n## Q* = 6.1555, df = 6, p-value = 0.406\n## \n## Model df: 4.   Total lags used: 10\n\n\nПо IC модель ARIMA(2, 0, 0) заметно хуже ARIMA(3, 0, 1). На самом деле, истинная модель ARIMA(1, 0, 1), которая по IC близка к ARIMA(2, 0, 0).\n\nts5 &lt;- as.ts(read.csv(\"./data/ts5.txt\", sep=\"\"))\nggtsdisplay(ts5, plot.type = \"partial\", lag.max = 50)\n\n\n\n\n\n\n\n\nПохоже на модель ARIMA(3, 0, 2).\n\n(fit &lt;- Arima(ts5, c(3, 0, 2), include.mean = FALSE))\n\n## Series: ts5 \n## ARIMA(3,0,2) with zero mean \n## \n## Coefficients:\n##          ar1      ar2     ar3     ma1     ma2\n##       0.1413  -0.2796  0.1223  0.1686  0.1740\n## s.e.  0.3007   0.1123  0.0415  0.3018  0.1553\n## \n## sigma^2 = 0.3963:  log likelihood = -1909.77\n## AIC=3831.54   AICc=3831.58   BIC=3865.14\n\ncheckresiduals(fit, lag.max = 50)\n\n\n\n\n\n\n\n\n## \n##  Ljung-Box test\n## \n## data:  Residuals from ARIMA(3,0,2) with zero mean\n## Q* = 6.9261, df = 5, p-value = 0.2262\n## \n## Model df: 5.   Total lags used: 10\n\n\n\nauto_fit &lt;- auto.arima(\n  ts5,\n  max.p = 3, max.q = 2,\n  stationary = TRUE,\n  stepwise = FALSE,\n  trace = TRUE,\n  approximation = FALSE\n)\n\n## \n##  ARIMA(0,0,0) with zero mean     : 4020.233\n##  ARIMA(0,0,0) with non-zero mean : 4022.044\n##  ARIMA(0,0,1) with zero mean     : 3839.549\n##  ARIMA(0,0,1) with non-zero mean : 3841.435\n##  ARIMA(0,0,2) with zero mean     : 3833.206\n##  ARIMA(0,0,2) with non-zero mean : 3835.076\n##  ARIMA(1,0,0) with zero mean     : 3878.979\n##  ARIMA(1,0,0) with non-zero mean : 3880.873\n##  ARIMA(1,0,1) with zero mean     : 3833.555\n##  ARIMA(1,0,1) with non-zero mean : 3835.429\n##  ARIMA(1,0,2) with zero mean     : 3835.177\n##  ARIMA(1,0,2) with non-zero mean : 3837.05\n##  ARIMA(2,0,0) with zero mean     : 3846.239\n##  ARIMA(2,0,0) with non-zero mean : 3848.097\n##  ARIMA(2,0,1) with zero mean     : 3834.8\n##  ARIMA(2,0,1) with non-zero mean : 3836.671\n##  ARIMA(2,0,2) with zero mean     : 3834.094\n##  ARIMA(2,0,2) with non-zero mean : 3835.972\n##  ARIMA(3,0,0) with zero mean     : 3828.799\n##  ARIMA(3,0,0) with non-zero mean : 3830.688\n##  ARIMA(3,0,1) with zero mean     : 3830.809\n##  ARIMA(3,0,1) with non-zero mean : 3832.701\n##  ARIMA(3,0,2) with zero mean     : 3831.58\n##  ARIMA(3,0,2) with non-zero mean : 3833.471\n## \n## \n## \n##  Best model: ARIMA(3,0,0) with zero mean\n\nauto_fit\n\n## Series: ts5 \n## ARIMA(3,0,0) with zero mean \n## \n## Coefficients:\n##          ar1      ar2     ar3\n##       0.3103  -0.1605  0.0984\n## s.e.  0.0222   0.0230  0.0223\n## \n## sigma^2 = 0.3961:  log likelihood = -1910.39\n## AIC=3828.78   AICc=3828.8   BIC=3851.18\n\ncheckresiduals(auto_fit, lag.max = 50)\n\n\n\n\n\n\n\n\n## \n##  Ljung-Box test\n## \n## data:  Residuals from ARIMA(3,0,0) with zero mean\n## Q* = 8.1128, df = 7, p-value = 0.3227\n## \n## Model df: 3.   Total lags used: 10\n\n\nНаилучшей моделью оказалась ARIMA(3, 0, 0), которая и является истинной."
  },
  {
    "objectID": "main.html#реальные-данные-5",
    "href": "main.html#реальные-данные-5",
    "title": "Статистический анализ временных рядов",
    "section": "19.2 Реальные данные",
    "text": "19.2 Реальные данные\nАвтоматически подберем модель ARIMA для остатков после выделения тренда и сезонности с помощью SSA.\n\n19.2.1 Уровень воды реки Нил\n\nrNile &lt;- resid(r_NileMin)\nggtsdisplay(rNile, plot.type = \"partial\", lag.max = 50)\n\n\n\n\n\n\n\n\n\nrNile_train &lt;- head(rNile, -10)\nrNile_test &lt;- tail(rNile, 10)\narima_Nile &lt;- auto.arima(\n  rNile_train,\n  stationary = TRUE,\n  stepwise = FALSE,\n  approximation = FALSE\n)\narima_Nile\n\n## Series: rNile_train \n## ARIMA(1,0,2) with zero mean \n## \n## Coefficients:\n##          ar1      ma1      ma2\n##       0.7333  -0.3581  -0.0973\n## s.e.  0.0968   0.1064   0.0601\n## \n## sigma^2 = 4682:  log likelihood = -3684.56\n## AIC=7377.11   AICc=7377.17   BIC=7395.04\n\ncheckresiduals(arima_Nile, plot.type = \"hist\", lag.max = 50)\n\n\n\n\n\n\n\n\n## \n##  Ljung-Box test\n## \n## data:  Residuals from ARIMA(1,0,2) with zero mean\n## Q* = 3.0599, df = 7, p-value = 0.8794\n## \n## Model df: 3.   Total lags used: 10\n\n\nНет основания отвергать гипотезу о белом шуме, поэтому сделаем прогноз. Поскольку остатки не похожи на нормальное распределение, предсказательные интервалы будем вычислять с помощью бутстрепа:\n\nautoplot(forecast(arima_Nile, bootstrap = TRUE), include = 200, ylab = \"\") +\n  autolayer(rNile_test, colour = FALSE)\n\n\n\n\n\n\n\n\n\n\n19.2.2 Дебетовые карты\n\nrdebit &lt;- resid(reos_debit)\nggtsdisplay(rdebit, plot.type = \"partial\", lag.max = 50)\n\n\n\n\n\n\n\n\n\narima_debit &lt;- auto.arima(\n  rdebit,\n  stationary = TRUE,\n  seasonal = FALSE,\n  stepwise = FALSE,\n  approximation = FALSE\n)\narima_debit\n\n## Series: rdebit \n## ARIMA(0,0,3) with zero mean \n## \n## Coefficients:\n##           ma1     ma2     ma3\n##       -0.0411  0.0953  0.3832\n## s.e.   0.0871  0.0705  0.1096\n## \n## sigma^2 = 225793:  log likelihood = -999.65\n## AIC=2007.3   AICc=2007.61   BIC=2018.83\n\ncheckresiduals(arima_debit, lag.max = 50)\n\n\n\n\n\n\n\n\n## \n##  Ljung-Box test\n## \n## data:  Residuals from ARIMA(0,0,3) with zero mean\n## Q* = 56.817, df = 21, p-value = 3.824e-05\n## \n## Model df: 3.   Total lags used: 24\n\n\nНулевая гипотеза о белом шуме отверглась, видимо, в ряде осталась часть сезонности. Предсказывать неверную модель смысла нет."
  },
  {
    "objectID": "main.html#модельные-ряды-2",
    "href": "main.html#модельные-ряды-2",
    "title": "Статистический анализ временных рядов",
    "section": "21.1 Модельные ряды",
    "text": "21.1 Модельные ряды\nИзменение частоты:\n\nN &lt;- 200\nQ &lt;- 100\nx &lt;- ts(numeric(N))\nx[1:Q] &lt;- sin(2 * pi * 0.1 * (1:Q))\nx[(Q + 1):N] &lt;- sin(2 * pi * 0.15 * ((Q + 1):N))\n\nhf &lt;- hfunc(x, neig = 2)\nggarrange(autoplot(x, ylab = \"\"), hf$plot, nrow = 2)\n\n\n\n\n\n\n\n\nСплошной линией нарисована диагональная функция разладки, а пунктирной — строковая. Матрица разладки:\n\npal &lt;- rev(hcl.colors(256, \"Grays\"))\nplot(hf$hmatr, col = pal)\n\n\n\n\n\n\n\n\nУвеличение ранга сигнала:\n\nx[1:Q] &lt;- sin(2 * pi * 0.1 * (1:Q))\nx[(Q + 1):N] &lt;- \n  0.8 * sin(2 * pi * 0.1 * ((Q + 1):N)) + 0.3 * sin(2 * pi * 0.2 * ((Q + 1):N))\n\nhf &lt;- hfunc(x, L = 20, neig = 2)\nggarrange(autoplot(x, ylab = \"\"), hf$plot, nrow = 2)\n\n\n\n\n\n\n\n\n\nplot(hf$hmatr, col = pal)\n\n\n\n\n\n\n\n\nУменьшение ранга сигнала:\n\nx &lt;- ts(rev(x))\nhf &lt;- hfunc(x, L = 20, neig = 4)\nggarrange(autoplot(x, ylab = \"\"), hf$plot, nrow = 2)\n\n\n\n\n\n\n\n\n\nplot(hf$hmatr, col = pal)\n\n\n\n\n\n\n\n\nФункция модуля:\n\nx[1:N] &lt;- abs((1:N) - Q)\nhf &lt;- hfunc(x, B = 40, T = 40, L = 20, neig = 2)\nggarrange(autoplot(x, ylab = \"\"), hf$plot, nrow = 2)\n\n\n\n\n\n\n\n\n\nplot(hf$hmatr, col = pal)"
  },
  {
    "objectID": "main.html#реальные-ряды",
    "href": "main.html#реальные-ряды",
    "title": "Статистический анализ временных рядов",
    "section": "21.2 Реальные ряды",
    "text": "21.2 Реальные ряды\n\n21.2.1 Дебетовые карты\nБудем искать разладку в тренде, сперва удалим сезонность:\n\ns &lt;- ssa(debitcards, 72, svd.method = \"svd\")\neos &lt;- eossa_new(s, list(1:14), \"distance\")\nr_eos &lt;- reconstruct(eos, list(4:14))\n(p1 &lt;- autoplot(resid(r_eos), ylab = \"\"))\n\n\n\n\n\n\n\n\n\nplot(ssa(resid(r_eos)[1:48], L = 24), \"vectors\")\n\n\n\n\n\n\n\n\nБудем брать первую компоненту разложения.\n\nhf &lt;- hfunc(resid(r_eos), B = 48, T = 48, L = 24, neig = 1)\nggarrange(p1, hf$plot, nrow = 2)\n\n\n\n\n\n\n\n\nФункции разладки заметила изменение структуры ряда с начала \\(2005\\) года и с середины \\(2008\\) года, что видно по ряду. Матрица разладки:\n\nplot(hf$hmatr, col = pal)\n\n\n\n\n\n\n\n\n\n\n21.2.2 Индекс Dow-Jones\n\ndata(\"dj\", package = \"fma\")\n(p1 &lt;- autoplot(dj, ylab = \"\"))\n\n\n\n\n\n\n\n\n\nplot(ssa(dj[1:40], 20), \"vector\")\n\n\n\n\n\n\n\n\nБудем описывать тренд двумя компонентами.\n\nhf &lt;- hfunc(dj, B = 40, T = 40, L = 20, neig = 2)\nggarrange(p1, hf$plot, nrow = 2)\n\n\n\n\n\n\n\n\nРяд имеет по крайней мере одну разладку в среднем, функции разладки это изменение и обнаружили. Матрица разладки:\n\nplot(hf$hmatr, col = pal)"
  },
  {
    "objectID": "main.html#simple-exponential-smoothing",
    "href": "main.html#simple-exponential-smoothing",
    "title": "Статистический анализ временных рядов",
    "section": "22.1 Simple exponential smoothing",
    "text": "22.1 Simple exponential smoothing\n\nfit &lt;- ses(debitcards)\nautoplot(forecast(fit), ylab = \"\") + autolayer(fit$fitted, color =\"#D55E00\")"
  },
  {
    "objectID": "main.html#holts-method",
    "href": "main.html#holts-method",
    "title": "Статистический анализ временных рядов",
    "section": "22.2 Holt’s method",
    "text": "22.2 Holt’s method\n\nfit &lt;- holt(debitcards)\nautoplot(fit, ylab = \"\") + autolayer(fit$fitted, color =\"#D55E00\")\n\n\n\n\n\n\n\n\nМожно сделать тренд затухающим:\n\nfit_damped &lt;- holt(debitcards, damped = TRUE)\nautoplot(forecast(fit_damped), ylab = \"\") + autolayer(fit_damped$fitted, color =\"#D55E00\")"
  },
  {
    "objectID": "main.html#holt-winters-method",
    "href": "main.html#holt-winters-method",
    "title": "Статистический анализ временных рядов",
    "section": "22.3 Holt-Winters’ method",
    "text": "22.3 Holt-Winters’ method\n\nfit &lt;- hw(debitcards, seasonal = \"multiplicative\")\nautoplot(forecast(fit), ylab = \"\") + autolayer(fit$fitted, color =\"#D55E00\")"
  },
  {
    "objectID": "main.html#выбор-модели",
    "href": "main.html#выбор-модели",
    "title": "Статистический анализ временных рядов",
    "section": "22.4 Выбор модели",
    "text": "22.4 Выбор модели\nАвтоматически подберем модель для ряда без двух периодов:\n\n(ets_debit &lt;- ets(debit_trunc))\n\n## ETS(M,A,M) \n## \n## Call:\n## ets(y = debit_trunc)\n## \n##   Smoothing parameters:\n##     alpha = 0.2375 \n##     beta  = 0.0122 \n##     gamma = 1e-04 \n## \n##   Initial states:\n##     l = 8094.1229 \n##     b = 98.3288 \n##     s = 1.2677 0.9566 0.99 0.9719 1.0937 1.0566\n##            1.0423 1.0182 0.9179 0.9269 0.8629 0.8952\n## \n##   sigma:  0.049\n## \n##      AIC     AICc      BIC \n## 2383.313 2388.682 2432.321\n\n\nВыбралась модель ETS(M, A, M), то есть модель с мультипликативными ошибками и сезонностью и с аддитивным трендом. Посмотрим на остатки:\n\ncheckresiduals(ets_debit, plot.type = \"hist\", lag.max = 50)\n\n\n\n\n\n\n\n\n## \n##  Ljung-Box test\n## \n## data:  Residuals from ETS(M,A,M)\n## Q* = 39.104, df = 24, p-value = 0.02663\n## \n## Model df: 0.   Total lags used: 24\n\n\nПри уровне значимости \\(\\alpha=0.01\\) нулевая гипотеза не отвергается, построим на предсказания:\n\nfc_ets &lt;- forecast(ets_debit, h = 24, bootstrap = TRUE)\nautoplot(fc_ets, flwd = 1, ylab = \"\") + autolayer(debitcards, color = \"black\")\n\n\n\n\n\n\n\n\nСравним полученные прогнозы с прогнозами других методов, рассмотренных ранее:\n\nets_debit_damped &lt;- ets(debit_trunc, damped = TRUE)\nfc_ets_damped &lt;- forecast(ets_debit_damped, h = 24, PI = FALSE)\n\nautoplot(tail(debitcards, 36), ylab = \"\") +\n  autolayer(fc_ets$mean, series = \"ETS\", lwd = 1) +\n  autolayer(fc_ets_damped$mean, series = \"ETS (damped)\", lwd = 1) +\n  autolayer(for_sarima$mean, series = \"SARIMA\", lwd = 1, lty = \"dashed\") +\n  autolayer(rfor_debit, series = \"SSA\", lwd = 1, lty = \"dashed\")\n\n\n\n\n\n\n\n\nОшибки предсказаний:\n\nrmse_debit &lt;- add_row(\n  rmse_debit,\n  Method = c(\"ETS\", \"ETS (damped)\"),\n  RMSE = c(rmse(debitcards, fc_ets$mean), rmse(debitcards, fc_ets_damped$mean))\n)\nrmse_debit |&gt; arrange(RMSE)\n\n\n\n\n\nMethod\nRMSE\n\n\n\n\nSARIMA\n779.4278\n\n\nETS\n1060.6393\n\n\nETS (damped)\n1134.1526\n\n\nSSA (recurrent)\n1436.7990\n\n\nSSA (vector)\n2363.8067\n\n\nSSA (recurrent with bootstrap)\n2845.1905\n\n\n\n\n\n\nETS оказалась по точности между SARIMA и SSA, причем модель с затухающим трендом оказалась хуже, но разница небольшая."
  }
]